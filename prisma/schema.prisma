// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model shopify_sessions {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model setting {
  id                    Int       @id @default(autoincrement())
  apiKey                String
  prompt                String    @default("test")
  convert_api_key       String    @default("")
  convert_secret_key    String    @default("")
  convert_project_id    String    @default("")
  convert_account_id    String    @default("")
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
}

model shopify_pages {
  id            Int               @id @default(autoincrement())
  pageId        String            @unique
  title         String
  handle        String
  bodyHtml      String?
  createdAt     DateTime
  updatedAt     DateTime

  duplicates            duplicate_pages[]
  convert_experiences   convert_experiences?
}

model duplicate_pages {
  id             Int            @id @default(autoincrement())
  shopifyPageId  Int            // Foreign key
  pageId         String         @unique
  title          String
  handle         String
  bodyHtml       String?
  createdAt      DateTime
  updatedAt      DateTime

  shopifyPage    shopify_pages  @relation(fields: [shopifyPageId], references: [id])
}

model convert_experiences {
  id             Int            @id @default(autoincrement())
  name           String
  shopifyPageId  Int            @unique
  experienceId   Int            @unique
  status         String?        @default("active")
  createdAt      DateTime
  updatedAt      DateTime

  shopifyPage    shopify_pages  @relation(fields: [shopifyPageId], references: [id])
  variants              variants[]
}

model variants {
  id            Int       @id @default(autoincrement())
  name          String
  experienceId  Int
  variantId     String    @unique
  variant_url   String
  createdAt      DateTime
  updatedAt      DateTime

  convert_experiences convert_experiences @relation(fields: [experienceId], references: [experienceId])
}
